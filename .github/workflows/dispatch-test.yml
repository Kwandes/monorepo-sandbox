name: Test workflow dispatch

on:
  push:
    branches:
      - production
  workflow_dispatch:
    inputs:
      deployApi:
        type: boolean
        description: Deploy the API app
        default: true
      deployFrontend:
        type: boolean
        description: Deploy the Frontend app
        default: true
      deployTunnel:
        type: boolean
        description: Deploy the Tunnel app
        default: true
      environment:
        type: choice
        description: Which environment to deploy to
        options:
          - test
          - staging
          - demo

jobs:
  log-inputs:
    name: Log workflow inputs
    runs-on: ubuntu-latest
    steps:
      - name: Log inputs
        run: |
          echo "Branch - $GITHUB_REF"
          echo "Environment - ${{ inputs.environment }}"
          echo "DeployApi - ${{ inputs.deployApi }}"
          echo "DeployFrontend - ${{ inputs.DeployFrontend }}"
          echo "DeployTunnel - ${{ inputs.deployTunnel }}"

  api:
    if: ${{ inputs.deployApi }} || $GITHUB_REF##*/ == *"production"*
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deployment.key
          chmod 600 ~/.ssh/deployment.key
          cat >>~/.ssh/config <<END
          Host deployment
            HostName $SSH_HOST
            User $SSH_USERNAME
            IdentityFile ~/.ssh/deployment.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: "${{ inputs.environment }}.${{ secrets.SSH_HOST }}"

      - name: SSH into the server and perform command
        run: ssh deployment 'date >> log && echo "Api deployment triggered" >> log'

  frontend:
    if: ${{ inputs.deployFrontend }} || $GITHUB_REF##*/ == *"production"*
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deployment.key
          chmod 600 ~/.ssh/deployment.key
          cat >>~/.ssh/config <<END
          Host deployment
            HostName $SSH_HOST
            User $SSH_USERNAME
            IdentityFile ~/.ssh/deployment.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: SSH into the server and perform command
        run: ssh deployment 'date >> log && echo "Frontend deployment triggered" >> log'

  tunnel:
    if: ${{ inputs.deployTunnel }} || $GITHUB_REF##*/ == *"production"*
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deployment.key
          chmod 600 ~/.ssh/deployment.key
          cat >>~/.ssh/config <<END
          Host deployment
            HostName $SSH_HOST
            User $SSH_USERNAME
            IdentityFile ~/.ssh/deployment.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: SSH into the server and perform command
        run: ssh deployment 'date >> log && echo "Tunnel deployment triggered" >> log'
